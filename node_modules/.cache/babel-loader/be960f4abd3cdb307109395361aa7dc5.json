{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\1653020_10\\\\Source\\\\src\\\\components\\\\CovidMap.js\";\nimport React, { useEffect, useState } from 'react';\nimport { ListItem } from '@material-ui/core';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { startOfToday } from \"date-fns\";\nimport Seekbar from \"./Seekbar\";\n\nfunction CovidMap({\n  onPatientMarkerClicked,\n  handleclickList\n}) {\n  const today = startOfToday();\n  const [patients, setPatients] = useState([]);\n  const [positionP, setPositionP] = useState([15.762887, 106.6800684]);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [zoomDefault, setZoomDefault] = useState(5);\n  const [datevalue, setDatevalue] = useState(today);\n\n  const handleclickMoveMap = a => {\n    setPositionP([a.lat, a.lng]);\n    setZoomDefault(20);\n  };\n\n  const handleListItemClick = (event, index, i) => {\n    setSelectedIndex(index);\n  };\n\n  function compare(a, b) {\n    let comparison = 0;\n\n    if (a.verifyDate > b.verifyDate) {\n      comparison = -1;\n    } else if (a.verifyDate < b.verifyDate) {\n      comparison = 1;\n    }\n\n    return comparison;\n  }\n\n  const handleTransdatevalue = datevalueS => {\n    setDatevalue(datevalueS);\n    setZoomDefault(5);\n  };\n\n  const handleTransPosotion = ([PositionValuelat, PositionValuelng]) => {\n    setPositionP([PositionValuelat, PositionValuelng]);\n  };\n\n  const handleTranszoomDefault = ZoomValue => {\n    setZoomDefault(ZoomValue);\n  };\n\n  useEffect(() => {\n    fetch(\"https://maps.vnpost.vn/apps/covid19/api/patientapi/list\").then(res => res.json()).then(result => {\n      setPatients(result.data);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {// setIsLoaded(true);\n      // setError(error);\n    });\n  }, []);\n  const listItems = [].concat(patients).sort(compare).map((d, i) => {\n    if (Date.parse(d.verifyDate) <= Date.parse(datevalue)) return /*#__PURE__*/React.createElement(ListItem, {\n      selected: selectedIndex === d.name + d.address,\n      button: true,\n      onClick: event => {\n        handleclickList(d);\n        handleclickMoveMap(d);\n        handleListItemClick(event, d.name + d.address);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 24\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 76\n      }\n    }, \" \", d.name, \" - \", d.address, \" \"));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Map, {\n    center: positionP,\n    zoom: zoomDefault,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png   \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), \" \", patients.sort(compare).map((patient, i) => {\n    if (Date.parse(patient.verifyDate) <= Date.parse(datevalue)) return /*#__PURE__*/React.createElement(Marker, {\n      position: [patient.lat, patient.lng],\n      onClick: event => {\n        handleclickList(patient);\n        handleListItemClick(event, patient.name + patient.address, i);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \" Name: \", patient.name, \" \"), \" \", /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 64\n      }\n    }, \" Address: \", patient.address, \" \"), \" \", /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 70\n      }\n    }, \" Note: \", patient.note, \" \"), \" \", /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 64\n      }\n    }, \" Verify date: \", patient.verifyDate, \" \"), \" \"), \" \"), \" \");\n  }), \" \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    id: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Seekbar, {\n    handleTransdatevalue: handleTransdatevalue,\n    handleTransPosotion: handleTransPosotion,\n    handleTranszoomDefault: handleTranszoomDefault,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \" \"), \"Danh s\\xE1ch ng\\u01B0\\u1EDDi nhi\\u1EC5m nCovid - 19:\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \" \", listItems, \" \"), \" \"));\n}\n\n;\nexport default CovidMap;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/1653020_10/Source/src/components/CovidMap.js"],"names":["React","useEffect","useState","ListItem","Map","TileLayer","Marker","Popup","startOfToday","Seekbar","CovidMap","onPatientMarkerClicked","handleclickList","today","patients","setPatients","positionP","setPositionP","selectedIndex","setSelectedIndex","zoomDefault","setZoomDefault","datevalue","setDatevalue","handleclickMoveMap","a","lat","lng","handleListItemClick","event","index","i","compare","b","comparison","verifyDate","handleTransdatevalue","datevalueS","handleTransPosotion","PositionValuelat","PositionValuelng","handleTranszoomDefault","ZoomValue","fetch","then","res","json","result","data","error","listItems","concat","sort","map","d","Date","parse","name","address","patient","note"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ListItem } from '@material-ui/core';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { startOfToday } from \"date-fns\";\nimport Seekbar from \"./Seekbar\"\n\nfunction CovidMap({ onPatientMarkerClicked, handleclickList }) {\n    const today = startOfToday();\n    const [patients, setPatients] = useState([]);\n    const [positionP, setPositionP] = useState([15.762887, 106.6800684]);\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n    const [zoomDefault, setZoomDefault] = useState(5);\n    const [datevalue, setDatevalue] = useState(today);\n\n\n    const handleclickMoveMap = (a) => {\n        setPositionP([a.lat, a.lng])\n        setZoomDefault(20)\n    };\n\n    const handleListItemClick = (event, index, i) => {\n        setSelectedIndex(index);\n    };\n\n    function compare(a, b) {\n        let comparison = 0;\n        if (a.verifyDate > b.verifyDate) {\n            comparison = -1;\n        } else if (a.verifyDate < b.verifyDate) {\n            comparison = 1;\n        }\n        return comparison;\n    }\n\n    const handleTransdatevalue = (datevalueS) => {\n        setDatevalue(datevalueS)\n        setZoomDefault(5);\n    }\n    const handleTransPosotion = ([PositionValuelat, PositionValuelng]) => {\n        setPositionP([PositionValuelat, PositionValuelng]);\n    }\n    const handleTranszoomDefault = (ZoomValue) => {\n        setZoomDefault(ZoomValue);\n    }\n\n\n    useEffect(() => {\n        fetch(\"https://maps.vnpost.vn/apps/covid19/api/patientapi/list\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setPatients(result.data);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    // setIsLoaded(true);\n                    // setError(error);\n                }\n            )\n    }, [])\n\n    const listItems = [].concat(patients)\n        .sort(compare)\n        .map((d, i) => {\n            if (Date.parse(d.verifyDate) <= Date.parse(datevalue))\n                return <ListItem selected = { selectedIndex === (d.name + d.address) }\n            button onClick = {\n                (event) => { handleclickList(d);\n                    handleclickMoveMap(d);\n                    handleListItemClick(event, (d.name + d.address)) } } > < li > { d.name } - { d.address } < /li></ListItem >\n        });\n    return <div > < Map center = { positionP }\n    zoom = { zoomDefault } >\n        <\n        TileLayer\n    attribution = '&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    url = \"https://{s}.tile.osm.org/{z}/{x}/{y}.png   \" /\n        > {\n            patients\n            .sort(compare)\n            .map((patient, i) => {\n                    if (Date.parse(patient.verifyDate) <= Date.parse(datevalue))\n                        return ( <\n                            Marker position = {\n                                [patient.lat, patient.lng] }\n                            onClick = {\n                                (event) => { handleclickList(patient);\n                                    handleListItemClick(event, (patient.name + patient.address), i) } } >\n                            <\n                            Popup >\n                            <\n                            ul >\n                            <\n                            li > Name: { patient.name } < /li> <\n                            li > Address: { patient.address } < /li> <\n                            li > Note: { patient.note } < /li> <\n                            li > Verify date: { patient.verifyDate } < /li> <\n                            /ul> <\n                            /Popup> <\n                            /Marker>)\n                        })\n            } <\n            /Map> <\n            div id = \"list\" >\n            <\n            Seekbar handleTransdatevalue = { handleTransdatevalue }\n            handleTransPosotion = { handleTransPosotion }\n            handleTranszoomDefault = { handleTranszoomDefault } > < /Seekbar>\n            Danh sách người nhiễm nCovid - 19:\n                <\n                ul > { listItems } <\n                /ul> <\n                /div></div > ;\n        };\n\n\n    export default CovidMap;"]},"metadata":{},"sourceType":"module"}