{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\1653020_10\\\\Source\\\\src\\\\components\\\\CovidMap.js\";\nimport React, { useEffect, useState } from 'react';\nimport { ListItem } from '@material-ui/core';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { startOfToday } from \"date-fns\";\nimport Seekbar from \"./Seekbar\";\nimport Axios from 'axios';\n\nfunction CovidMap({\n  onPatientMarkerClicked,\n  handleclickList\n}) {\n  const today = startOfToday();\n  const [patients, setPatients] = useState([]);\n  const [positionP, setPositionP] = useState([15.762887, 106.6800684]);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [zoomDefault, setZoomDefault] = useState(5);\n  const [datevalue, setDatevalue] = useState(today);\n\n  const handleclickMoveMap = a => {\n    setPositionP([a.lat, a.lng]);\n    setZoomDefault(20);\n  };\n\n  const handleListItemClick = (event, index, i) => {\n    setSelectedIndex(index);\n  };\n\n  function compare(a, b) {\n    let comparison = 0;\n\n    if (a.verifyDate > b.verifyDate) {\n      comparison = -1;\n    } else if (a.verifyDate < b.verifyDate) {\n      comparison = 1;\n    }\n\n    return comparison;\n  }\n\n  const handleTransdatevalue = datevalueS => {\n    setDatevalue(datevalueS);\n    setZoomDefault(5);\n  };\n\n  const handleTransPosotion = ([PositionValuelat, PositionValuelng]) => {\n    setPositionP([PositionValuelat, PositionValuelng]);\n  };\n\n  const handleTranszoomDefault = ZoomValue => {\n    setZoomDefault(ZoomValue);\n  };\n\n  useEffect(() => {\n    Axios.get(\"https://cros-anywhere.heorokuapp.com/https://maps.vnpost.vn/apps/covid19/api/patientapi/list\").then(result => {\n      setPatients(result.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const listItems = [].concat(patients).sort(compare).map((d, i) => {\n    if (Date.parse(d.verifyDate) <= Date.parse(datevalue)) return /*#__PURE__*/React.createElement(ListItem, {\n      selected: selectedIndex === d.name + d.address,\n      button: true,\n      onClick: event => {\n        handleclickList(d);\n        handleclickMoveMap(d);\n        handleListItemClick(event, d.name + d.address);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 44\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 226\n      }\n    }, d.name, \" - \", d.address));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    center: positionP,\n    zoom: zoomDefault,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png   \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), patients.sort(compare).map((patient, i) => {\n    if (Date.parse(patient.verifyDate) <= Date.parse(datevalue)) return /*#__PURE__*/React.createElement(Marker, {\n      position: [patient.lat, patient.lng],\n      onClick: event => {\n        handleclickList(patient);\n        handleListItemClick(event, patient.name + patient.address, i);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \"Name: \", patient.name), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, \"Address: \", patient.address), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \"Note: \", patient.note), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Verify date: \", patient.verifyDate))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Seekbar, {\n    handleTransdatevalue: handleTransdatevalue,\n    handleTransPosotion: handleTransPosotion,\n    handleTranszoomDefault: handleTranszoomDefault,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), \"Danh s\\xE1ch ng\\u01B0\\u1EDDi nhi\\u1EC5m nCovid - 19:\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, listItems)));\n}\n\n;\nexport default CovidMap;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/1653020_10/Source/src/components/CovidMap.js"],"names":["React","useEffect","useState","ListItem","Map","TileLayer","Marker","Popup","startOfToday","Seekbar","Axios","CovidMap","onPatientMarkerClicked","handleclickList","today","patients","setPatients","positionP","setPositionP","selectedIndex","setSelectedIndex","zoomDefault","setZoomDefault","datevalue","setDatevalue","handleclickMoveMap","a","lat","lng","handleListItemClick","event","index","i","compare","b","comparison","verifyDate","handleTransdatevalue","datevalueS","handleTransPosotion","PositionValuelat","PositionValuelng","handleTranszoomDefault","ZoomValue","get","then","result","data","catch","error","console","log","listItems","concat","sort","map","d","Date","parse","name","address","patient","note"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from 'react';\nimport { ListItem } from '@material-ui/core';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { startOfToday} from \"date-fns\";\nimport Seekbar from \"./Seekbar\"\nimport Axios from 'axios';\n\nfunction CovidMap  ({onPatientMarkerClicked,handleclickList}){\n    const today = startOfToday();\n    const [patients, setPatients] = useState([]);\n    const [positionP, setPositionP] = useState([15.762887, 106.6800684]);\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n    const [zoomDefault,setZoomDefault] = useState(5);\n    const [datevalue, setDatevalue] = useState(today);\n\n\n    const handleclickMoveMap = (a) => {\n        setPositionP ([a.lat, a.lng])\n        setZoomDefault (20)\n    };\n\n    const handleListItemClick = (event, index, i) => {\n        setSelectedIndex(index);\n    };\n\n    function compare(a, b) {\n        let comparison = 0;\n        if (a.verifyDate > b.verifyDate) {\n            comparison = -1;\n        } else if (a.verifyDate < b.verifyDate) {\n            comparison = 1;\n        }\n        return comparison;\n    }\n\n    const handleTransdatevalue = (datevalueS) => {\n        setDatevalue(datevalueS)\n        setZoomDefault(5);\n    }\n    const handleTransPosotion = ([PositionValuelat,PositionValuelng]) => {\n        setPositionP([PositionValuelat,PositionValuelng]);\n    }\n    const handleTranszoomDefault = (ZoomValue) => {\n        setZoomDefault(ZoomValue);\n    }\n    \n    \n    useEffect(() => {\n        Axios.get(\"https://cros-anywhere.heorokuapp.com/https://maps.vnpost.vn/apps/covid19/api/patientapi/list\")\n        .then ((result) => {\n            setPatients(result.data);\n        })\n        .catch ((error) => {\n            console.log(error);\n        })\n    }, [])\n\n    const listItems = [].concat(patients)\n                        .sort(compare)\n                        .map((d,i) => {\n                            if (Date.parse(d.verifyDate) <= Date.parse(datevalue))\n                                    return <ListItem selected={selectedIndex === (d.name + d.address)} button onClick={(event) => {handleclickList(d);handleclickMoveMap(d);handleListItemClick(event, (d.name + d.address))}} > <li>{d.name} - {d.address}</li></ListItem>\n                                });            \n    return <div><Map center={positionP} zoom={zoomDefault}>\n            <TileLayer\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png   \"\n            />\n    {patients\n        .sort(compare)\n        .map((patient,i) => {\n            if (Date.parse(patient.verifyDate) <= Date.parse(datevalue))\n            return (\n            <Marker position={[patient.lat, patient.lng]} onClick={(event) => {handleclickList(patient);handleListItemClick(event, (patient.name + patient.address), i)}}>\n                <Popup>\n                    <ul>\n                        <li>Name: {patient.name}</li>\n                        <li>Address: {patient.address}</li>\n                        <li>Note: {patient.note}</li>\n                        <li>Verify date: {patient.verifyDate}</li>\n                    </ul>\n                </Popup>\n            </Marker>)\n            })\n    }\n    </Map>\n    <div id=\"list\">\n        <Seekbar handleTransdatevalue={handleTransdatevalue} handleTransPosotion={handleTransPosotion} handleTranszoomDefault={handleTranszoomDefault}></Seekbar>\n        Danh sách người nhiễm nCovid - 19:\n        <ul>\n            {listItems}\n        </ul>\n    </div></div>;\n};\n\n\nexport default CovidMap;\n"]},"metadata":{},"sourceType":"module"}