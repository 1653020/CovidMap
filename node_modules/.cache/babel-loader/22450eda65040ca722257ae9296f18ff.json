{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\1653020_10\\\\Source\\\\src\\\\components\\\\ChartVN.js\";\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport Axios from 'axios';\nconst temp = [{\n  name: String(),\n  Nhiễm: Number(),\n  Nghi_Nhiễm: Number(),\n  HoiPhuc: Number()\n}];\n\nfunction ChartVN() {\n  const [Patients, setPatients] = useState({});\n  const [items, setItems] = useState([{\n    name: String(),\n    Nhiễm: Number(),\n    Nghi_Nhiễm: Number(),\n    Hồi_Phục: Number()\n  }]);\n  useEffect(() => {\n    Axios.get(\"https://td.fpt.ai/corona/corona-chart-vn.json\").then(result => {\n      setPatients(result.data);\n      setItems(temp);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {// setIsLoaded(true);\n      // setError(error);\n    });\n  }, []);\n  const arrayOfObj = [].concat(Object.values(Patients));\n  const arrayKeys = [].concat(Object.keys(Patients));\n\n  if (temp[0].name === \"\") {\n    for (let i = 0; i < arrayKeys.length; i++) {\n      temp[i] = {\n        name: arrayKeys[i],\n        Nhiễm: [].concat(arrayOfObj[i])[0],\n        Nghi_Nhiễm: [].concat(arrayOfObj[i])[1],\n        Hồi_Phục: [].concat(arrayOfObj[i])[2]\n      };\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(LineChart, {\n    width: 800,\n    height: 700,\n    data: items,\n    margin: {\n      top: 5,\n      right: 10,\n      left: 5,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"Nhi\\u1EC5m\",\n    stroke: \"#FF0000\",\n    activeDot: {\n      r: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"Nghi_Nhi\\u1EC5m\",\n    stroke: \"#FF6600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"H\\u1ED3i_Ph\\u1EE5c\",\n    stroke: \"#0033FF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default ChartVN;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/1653020_10/Source/src/components/ChartVN.js"],"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Axios","temp","name","String","Nhiễm","Number","Nghi_Nhiễm","HoiPhuc","ChartVN","Patients","setPatients","items","setItems","Hồi_Phục","get","then","result","data","error","arrayOfObj","concat","Object","values","arrayKeys","keys","i","length","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React, {useEffect, useState }  from 'react';\r\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\nimport Axios from 'axios';\r\n\r\nconst temp =[{\r\n    name: String(),\r\n    Nhiễm: Number(),\r\n    Nghi_Nhiễm: Number(),\r\n    HoiPhuc: Number()\r\n}]\r\n\r\nfunction ChartVN () {\r\n    const [Patients, setPatients] = useState({});\r\n    const [items,setItems] = useState([{\r\n        name: String(),\r\n        Nhiễm: Number(),\r\n        Nghi_Nhiễm: Number(),\r\n        Hồi_Phục: Number()\r\n    }])\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"https://td.fpt.ai/corona/corona-chart-vn.json\")\r\n            .then(\r\n                (result) => {\r\n                    setPatients(result.data);\r\n                    setItems(temp);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    // setIsLoaded(true);\r\n                    // setError(error);\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    const arrayOfObj = [].concat( Object.values(Patients));\r\n    const arrayKeys = [].concat( Object.keys(Patients));\r\n    \r\n    if(temp[0].name === \"\"){\r\n    for (let i=0; i<arrayKeys.length; i++){\r\n        temp[i] = {\r\n            name : arrayKeys[i],\r\n            Nhiễm : [].concat(arrayOfObj[i])[0],\r\n            Nghi_Nhiễm : [].concat(arrayOfObj[i])[1],\r\n            Hồi_Phục : [].concat(arrayOfObj[i])[2]\r\n        }\r\n    }}\r\n\r\n    return <LineChart\r\n            width={800}\r\n            height={700}\r\n            data={items}\r\n            margin={{\r\n                top: 5, right: 10, left: 5, bottom: 5,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"Nhiễm\" stroke=\"#FF0000\" activeDot={{ r: 8 }} />\r\n            <Line type=\"monotone\" dataKey=\"Nghi_Nhiễm\" stroke=\"#FF6600\" />\r\n            <Line type=\"monotone\" dataKey=\"Hồi_Phục\" stroke=\"#0033FF\" />\r\n        </LineChart>\r\n\r\n}\r\n\r\nexport default ChartVN;\r\n"]},"metadata":{},"sourceType":"module"}