{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\1653020_10\\\\Source\\\\src\\\\components\\\\Seekbar.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\nimport { subDays, startOfToday, format } from \"date-fns\";\nimport { scaleTime } from \"d3-scale\";\nimport { SliderRail, Handle, Track, Tick } from '../components/seekbarComponent';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nconst sliderStyle = {\n  position: \"relative\",\n  width: \"100%\"\n};\n\nfunction formatTick(ms) {\n  return format(new Date(ms), \"MMM dd\");\n}\n\nconst halfHour = 1000 * 60 * 60 * 12;\n\nfunction Seekbar({\n  handleTransdatevalue,\n  handleTransPosotion,\n  handleTranszoomDefault\n}) {\n  const today = startOfToday();\n  const BeginDay = subDays(Date.parse(\"2019-08-12T00:00:00\"), 0);\n  const [Selected, setSelected] = useState(today);\n  const [updated, setUpdated] = useState(today);\n  const [min] = useState(BeginDay);\n  const [max] = useState(today);\n  const [isActive, setIsActive] = useState(false);\n\n  const onChange = ([ms]) => {\n    setSelected(new Date(ms));\n  };\n\n  const onUpdate = ([ms]) => {\n    setUpdated(new Date(ms));\n    handleTransPosotion([15.762887, 106.6800684]);\n    handleTranszoomDefault(5);\n    handleTransdatevalue(new Date(ms));\n  };\n\n  const renderDateTime = (date, header) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        textAlign: \"center\",\n        fontFamily: \"Arial\",\n        margin: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, header, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, format(date, \"yyyy-MM-dd h:mm a\")));\n  };\n\n  const Stick = () => {\n    if (Selected < today) {\n      setSelected(new Date(Date.parse(Selected) + halfHour));\n      setUpdated(new Date(Date.parse(Selected) + halfHour));\n      handleTransdatevalue(new Date(Date.parse(Selected) + halfHour));\n    } else {\n      setIsActive(!isActive);\n    }\n  };\n\n  useInterval(() => Stick(), isActive ? 1000 : null);\n\n  function toggle() {\n    setIsActive(!isActive);\n    handleTranszoomDefault(5);\n    handleTransPosotion([15.762887, 106.6800684]);\n  }\n\n  const dateTicks = scaleTime().domain([min, max]).ticks(8).map(d => +d);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"playpause\",\n    className: `button button-primary button-primary-${isActive ? 'active' : 'inactive'}`,\n    onClick: () => {\n      toggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, isActive ? 'Pause' : 'Play')), /*#__PURE__*/React.createElement(Col, {\n    xs: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, renderDateTime(updated, \"Current Day\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"2%\",\n      height: 6,\n      width: \"90%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    mode: 1,\n    step: halfHour,\n    domain: [+min, +max],\n    rootStyle: sliderStyle,\n    onUpdate: onUpdate,\n    onChange: onChange,\n    values: [+Selected],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Rail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, ({\n    getRailProps\n  }) => /*#__PURE__*/React.createElement(SliderRail, {\n    getRailProps: getRailProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Handles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, ({\n    handles,\n    getHandleProps\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, handles.map(handle => /*#__PURE__*/React.createElement(Handle, {\n    key: handle.id,\n    handle: handle,\n    domain: [+min, +max],\n    getHandleProps: getHandleProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Tracks, {\n    right: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, ({\n    tracks,\n    getTrackProps\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, tracks.map(({\n    id,\n    source,\n    target\n  }) => /*#__PURE__*/React.createElement(Track, {\n    key: id,\n    source: source,\n    target: target,\n    getTrackProps: getTrackProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Ticks, {\n    values: dateTicks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, ({\n    ticks\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, ticks.map(tick => /*#__PURE__*/React.createElement(Tick, {\n    key: tick.id,\n    tick: tick,\n    count: ticks.length,\n    format: formatTick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }))))))))));\n}\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef(); // Remember the latest function.\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]); // Set up the interval.\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default Seekbar;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/1653020_10/Source/src/components/Seekbar.js"],"names":["React","useEffect","useState","useRef","Slider","Rail","Handles","Tracks","Ticks","subDays","startOfToday","format","scaleTime","SliderRail","Handle","Track","Tick","Row","Col","sliderStyle","position","width","formatTick","ms","Date","halfHour","Seekbar","handleTransdatevalue","handleTransPosotion","handleTranszoomDefault","today","BeginDay","parse","Selected","setSelected","updated","setUpdated","min","max","isActive","setIsActive","onChange","onUpdate","renderDateTime","date","header","textAlign","fontFamily","margin","fontSize","Stick","useInterval","toggle","dateTicks","domain","ticks","map","d","height","getRailProps","handles","getHandleProps","handle","id","tracks","getTrackProps","source","target","tick","length","callback","delay","savedCallback","current","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef } from 'react';\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\nimport { subDays, startOfToday, format } from \"date-fns\";\r\nimport { scaleTime } from \"d3-scale\";\r\nimport { SliderRail, Handle, Track, Tick } from '../components/seekbarComponent';\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst sliderStyle = {\r\n    position: \"relative\",\r\n    width: \"100%\"\r\n};\r\n\r\n\r\nfunction formatTick(ms) {\r\n    return format(new Date(ms), \"MMM dd\");\r\n}\r\n\r\nconst halfHour = 1000 * 60 * 60 * 12;\r\n\r\nfunction Seekbar ({handleTransdatevalue,handleTransPosotion,handleTranszoomDefault}){\r\n    const today = startOfToday();\r\n    const BeginDay = subDays(Date.parse(\"2019-08-12T00:00:00\"), 0);\r\n    const [Selected,setSelected] = useState(today);\r\n    const [updated, setUpdated] = useState(today);\r\n    const [min] = useState(BeginDay);\r\n    const [max] = useState(today);\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    const onChange = ([ms]) => {\r\n        setSelected(new Date(ms));\r\n    }\r\n    const onUpdate = ([ms]) => {\r\n        setUpdated (new Date(ms));\r\n        handleTransPosotion([15.762887, 106.6800684]);\r\n        handleTranszoomDefault (5);\r\n        handleTransdatevalue(new Date(ms));\r\n    };\r\n\r\n    const renderDateTime = (date, header) => {\r\n        return (\r\n            <div\r\n                style={{\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n                fontFamily: \"Arial\",\r\n                margin: 5\r\n            }}>\r\n            <b>{header}:</b>\r\n            <div style={{ fontSize: 12 }}>{format(date, \"yyyy-MM-dd h:mm a\")}</div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const Stick = () => {  \r\n        if (Selected < today) {\r\n            setSelected(new Date(Date.parse(Selected)+halfHour));\r\n            setUpdated(new Date(Date.parse(Selected)+halfHour));\r\n            handleTransdatevalue(new Date(Date.parse(Selected)+halfHour));\r\n        }\r\n        else {\r\n            setIsActive(!isActive);\r\n        }\r\n    } \r\n    \r\n    useInterval(() => Stick(),isActive ? 1000 : null);\r\n\r\n    function toggle() {\r\n        setIsActive(!isActive);\r\n        handleTranszoomDefault (5);\r\n        handleTransPosotion([15.762887, 106.6800684]);\r\n    }\r\n    const dateTicks = scaleTime()\r\n        .domain([min, max])\r\n        .ticks(8)\r\n        .map(d => +d);\r\n\r\n        \r\n    return <div>\r\n    <Row>\r\n            <Col xs={1}><button id=\"playpause\" className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={()=>{toggle()}}>\r\n                        {isActive ? 'Pause' : 'Play'}\r\n        </button></Col>\r\n            <Col xs={11}>\r\n            <div>\r\n        {renderDateTime(updated, \"Current Day\")}\r\n        <div style={{ margin: \"2%\", height: 6, width: \"90%\" }}>\r\n            <Slider\r\n                mode={1}\r\n                step={halfHour}\r\n                domain={[+min, +max]}\r\n                rootStyle={sliderStyle}\r\n                onUpdate={onUpdate}\r\n                onChange={onChange}\r\n                values={[+Selected]}>\r\n                <Rail>\r\n                    {({ getRailProps }) => <SliderRail getRailProps={getRailProps} />}\r\n                </Rail>\r\n                <Handles>\r\n                    {({ handles, getHandleProps }) => (\r\n                        <div>\r\n                        {handles.map(handle => (\r\n                        <Handle\r\n                            key={handle.id}\r\n                            handle={handle}\r\n                            domain={[+min, +max]}\r\n                            getHandleProps={getHandleProps}\r\n                        />\r\n                        ))}\r\n                        </div>\r\n                )}\r\n                </Handles>\r\n                <Tracks right={false}>\r\n                    {({ tracks, getTrackProps }) => (\r\n                    <div>\r\n                            {tracks.map(({ id, source, target }) => (\r\n                        <Track\r\n                        key={id}\r\n                        source={source}\r\n                        target={target}\r\n                        getTrackProps={getTrackProps}\r\n                        />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                </Tracks>\r\n                <Ticks values={dateTicks}>\r\n                    {({ ticks }) => (\r\n                    <div>\r\n                        {ticks.map(tick => (\r\n                        <Tick\r\n                            key={tick.id}\r\n                            tick={tick}\r\n                            count={ticks.length}\r\n                            format={formatTick}\r\n                        />\r\n                        ))}\r\n                    </div>\r\n                    )}\r\n                </Ticks>\r\n            </Slider>\r\n        </div>\r\n        </div>\r\n            </Col>\r\n        </Row>\r\n    </div>;\r\n}\r\n\r\n\r\nfunction useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n\r\n    // Remember the latest function.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n    function tick() {\r\n        savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n    }\r\n    }, [delay]);\r\n}\r\n\r\nexport default Seekbar;"]},"metadata":{},"sourceType":"module"}