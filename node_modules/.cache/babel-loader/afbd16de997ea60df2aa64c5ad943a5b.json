{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\1653020_10\\\\Source\\\\src\\\\components\\\\ChartGlobal.js\";\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport Axios from 'axios';\nconst temp = [{\n  name: String(),\n  Nhiem: Number(),\n  NghiNhiem: Number(),\n  HoiPhuc: Number()\n}];\n\nfunction ChartGlobal() {\n  const [Patients, setPatients] = useState({});\n  const [items, setItems] = useState([{\n    name: String(),\n    Nhiem: Number(),\n    NghiNhiem: Number(),\n    HoiPhuc: Number()\n  }]);\n  useEffect(() => {\n    Axios.get(\"https://td.fpt.ai/corona/corona-total.json\").then(result => {\n      setPatients(result.data);\n      setItems(temp);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {// setIsLoaded(true);\n      // setError(error);\n    });\n  }, []);\n  const arrayOfObj = [].concat(Object.values(Patients));\n  const arrayKeys = [].concat(Object.keys(Patients));\n\n  if (temp[0].name === \"\") {\n    for (let i = 0; i < arrayKeys.length; i++) {\n      temp[i] = {\n        name: arrayKeys[i],\n        Nhiem: [].concat(arrayOfObj[i])[0],\n        NghiNhiem: [].concat(arrayOfObj[i])[1],\n        HoiPhuc: [].concat(arrayOfObj[i])[2]\n      };\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(LineChart, {\n    width: 600,\n    height: 500,\n    data: items,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 5,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"Nhiem\",\n    stroke: \"#FF0000\",\n    activeDot: {\n      r: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"NghiNhiem\",\n    stroke: \"#FFFF00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"HoiPhuc\",\n    stroke: \"#00FF00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default ChartGlobal;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/1653020_10/Source/src/components/ChartGlobal.js"],"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Axios","temp","name","String","Nhiem","Number","NghiNhiem","HoiPhuc","ChartGlobal","Patients","setPatients","items","setItems","get","then","result","data","error","arrayOfObj","concat","Object","values","arrayKeys","keys","i","length","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React, {useEffect, useState }  from 'react';\r\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\nimport Axios from 'axios';\r\n\r\nconst temp =[{\r\n    name: String(),\r\n    Nhiem: Number(),\r\n    NghiNhiem: Number(),\r\n    HoiPhuc: Number()\r\n}]\r\n\r\nfunction ChartGlobal () {\r\n    const [Patients, setPatients] = useState({});\r\n    const [items,setItems] = useState([{\r\n        name: String(),\r\n        Nhiem: Number(),\r\n        NghiNhiem: Number(),\r\n        HoiPhuc: Number()\r\n    }])\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"https://td.fpt.ai/corona/corona-total.json\")\r\n            .then(\r\n                (result) => {\r\n                    setPatients(result.data);\r\n                    setItems(temp);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    // setIsLoaded(true);\r\n                    // setError(error);\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    const arrayOfObj = [].concat( Object.values(Patients));\r\n    const arrayKeys = [].concat( Object.keys(Patients));\r\n    \r\n    if(temp[0].name === \"\"){\r\n    for (let i=0; i<arrayKeys.length; i++){\r\n        temp[i] = {\r\n            name : arrayKeys[i],\r\n            Nhiem : [].concat(arrayOfObj[i])[0],\r\n            NghiNhiem : [].concat(arrayOfObj[i])[1],\r\n            HoiPhuc : [].concat(arrayOfObj[i])[2]\r\n        }\r\n    }}\r\n\r\n    return <LineChart\r\n            width={600}\r\n            height={500}\r\n            data={items}\r\n            margin={{\r\n                top: 5, right: 30, left: 5, bottom: 5,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"Nhiem\" stroke=\"#FF0000\" activeDot={{ r: 8 }} />\r\n            <Line type=\"monotone\" dataKey=\"NghiNhiem\" stroke=\"#FFFF00\" />\r\n            <Line type=\"monotone\" dataKey=\"HoiPhuc\" stroke=\"#00FF00\" />\r\n        </LineChart>\r\n\r\n}\r\n\r\nexport default ChartGlobal;\r\n"]},"metadata":{},"sourceType":"module"}